!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADMINS	data/config.py	/^ADMINS = env.list("ADMINS")  # Тут у нас будет список из админов$/;"	v
BOTNICK	data/config.py	/^BOTNICK = env.str("BOTNICK")$/;"	v
BOT_NAME	data/config.py	/^BOT_NAME = env.str("BOT_NAME")$/;"	v
BOT_TOKEN	data/config.py	/^BOT_TOKEN = env.str("BOT_TOKEN")  # Забираем значение типа str$/;"	v
BotLogging	utils/botlogging/botlogging.py	/^class BotLogging:$/;"	c
LOGS_BOT_TOKEN	data/config.py	/^LOGS_BOT_TOKEN = env.str("LOGS_BOT_TOKEN")$/;"	v
LOGS_BOT_TOKEN	data/config.py	/^LOGS_BOT_TOKEN = env.str("LOGS_TOKEN")$/;"	v
LOGS_DIR	data/config.py	/^LOGS_DIR = env.str("FOLDER_LOGS")$/;"	v
POSTGRES_AUTH	data/config.py	/^POSTGRES_AUTH = {$/;"	v
Sqlighter	utils/db_api/sqlighter.py	/^class Sqlighter:$/;"	c
TelegramHandler	utils/botlogging/telegram_errors_handler.py	/^class TelegramHandler(logging.Handler):$/;"	c
TelegramHandler	utils/telegram_errors_handler.py	/^class TelegramHandler(logging.Handler):$/;"	c
ThrottlingMiddleware	middlewares/throttling.py	/^class ThrottlingMiddleware(BaseMiddleware):$/;"	c
__enter__	utils/db_api/sqlighter.py	/^    def __enter__(self):$/;"	m	class:Sqlighter	file:
__exit__	utils/db_api/sqlighter.py	/^    def __exit__(self, exc_type, exc_val, exc_tb):$/;"	m	class:Sqlighter	file:
__init__	middlewares/throttling.py	/^    def __init__(self, limit=DEFAULT_RATE_LIMIT, key_prefix='antiflood_'):$/;"	m	class:ThrottlingMiddleware
__init__	utils/botlogging/botlogging.py	/^    def __init__(self, logger_name: str, logs_dir: str, bot_token: str, admin, $/;"	m	class:BotLogging
__init__	utils/botlogging/telegram_errors_handler.py	/^    def __init__(self, bot_token: str, admin_id: str, bot_name: str):$/;"	m	class:TelegramHandler
__init__	utils/db_api/sqlighter.py	/^    def __init__(self, db_name):$/;"	m	class:Sqlighter
__init__	utils/telegram_errors_handler.py	/^    def __init__(self, bot_token: str, admin_id: str, bot_name: str):$/;"	m	class:TelegramHandler
bot	loader.py	/^bot = Bot(token=config.BOT_TOKEN, parse_mode=types.ParseMode.HTML)$/;"	v
bot_echo	handlers/users/echo.py	/^async def bot_echo(message: types.Message):$/;"	f
bot_echo_all	handlers/users/echo.py	/^async def bot_echo_all(message: types.Message, state: FSMContext):$/;"	f
bot_help	handlers/users/help.py	/^async def bot_help(message: types.Message):$/;"	f
bot_start	handlers/users/start.py	/^async def bot_start(message: types.Message):$/;"	f
create_logs_folder	utils/botlogging/botlogging.py	/^    def create_logs_folder(self, logs_dir: str):$/;"	m	class:BotLogging
create_logs_folder	utils/misc/logging.py	/^def create_logs_folder(folder=config.FOLDER_LOGS):$/;"	f
decorator	utils/misc/throttling.py	/^    def decorator(func):$/;"	f	function:rate_limit
dir_path	utils/botlogging/botlogging.py	/^    dir_path = os.path.dirname(os.path.realpath(__file__))$/;"	v	class:BotLogging
dp	loader.py	/^dp = Dispatcher(bot, storage=storage)$/;"	v
emit	utils/botlogging/telegram_errors_handler.py	/^    def emit(self, record: logging.LogRecord):$/;"	m	class:TelegramHandler
emit	utils/telegram_errors_handler.py	/^    def emit(self, record: logging.LogRecord):$/;"	m	class:TelegramHandler
env	data/config.py	/^env = Env()$/;"	v
errors_handler	handlers/errors/error_handler.py	/^async def errors_handler(update, exception):$/;"	f
get_bot_logger	utils/botlogging/botlogging.py	/^    def get_bot_logger(self):$/;"	m	class:BotLogging
get_default_logger	utils/botlogging/botlogging.py	/^    def get_default_logger(self):$/;"	m	class:BotLogging
get_default_logger	utils/misc/logging.py	/^def get_default_logger():$/;"	f
get_handler_dir	utils/botlogging/botlogging.py	/^    def get_handler_dir(self, handler_dir: str): $/;"	m	class:BotLogging
get_logger	utils/botlogging/botlogging.py	/^    def get_logger(self):$/;"	m	class:BotLogging
get_logger	utils/misc/logging.py	/^def get_logger(name, template='default'):$/;"	f
log	utils/misc/logging.py	/^log = get_logger('M')$/;"	v
logger	handlers/errors/error_handler.py	/^logger = botlogging.BotLogging(logger_name='Main', logs_dir=config.LOGS_DIR, bot_token=config.LOGS_BOT_TOKEN, $/;"	v
logger	handlers/errors/error_handler.py	/^logger = logger.get_logger()$/;"	v
message_throttled	middlewares/throttling.py	/^    async def message_throttled(self, message: types.Message, throttled: Throttled):$/;"	m	class:ThrottlingMiddleware
on_process_message	middlewares/throttling.py	/^    async def on_process_message(self, message: types.Message, data: dict):$/;"	m	class:ThrottlingMiddleware
on_startup	app.py	/^async def on_startup(dispatcher):$/;"	f
on_startup_notify	utils/notify_admins.py	/^async def on_startup_notify(dp: Dispatcher):$/;"	f
rate_limit	utils/misc/throttling.py	/^def rate_limit(limit: int, key=None):$/;"	f
set_default_commands	utils/set_bot_commands.py	/^async def set_default_commands(dp):$/;"	f
storage	loader.py	/^storage = MemoryStorage()$/;"	v
